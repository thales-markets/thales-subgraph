specVersion: 0.0.4
description: Thales Sport Markets API
repository: https://github.com/thales-markets/thales-subgraph
schema:
  file: ../schema.graphql
dataSources:
  - kind: ethereum/contract
    name: SportPositionalMarketManagerSpreadAndTotal
    network: arbitrum-one
    source:
      address: '0x72ca0765d4bE0529377d656c9645600606214610'
      abi: SportPositionalMarketManager
      startBlock: 55381390
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - SportMarket
        - Position
      abis:
        - name: SportPositionalMarketManager
          file: ../abis/SportPositionalMarketManager_SpreadAndTotal.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: MarketCreated(address,indexed address,indexed bytes32,uint256,uint256,address,address,address)
          handler: handleMarketCreatedSpreadAndTotal
        - event: DoubleChanceMarketCreated(address,address,uint256,string)
          handler: handleDoubleChanceMarketCreated
        - event: DatesUpdatedForMarket(address,uint256,uint256)
          handler: handleDatesUpdatedForMarket
  - kind: ethereum/contract
    name: TheRundownConsumer
    network: arbitrum-one
    source:
      address: '0x0aBdaF0c4cFF91F96F817809d4735929fCA75B80'
      abi: TheRundownConsumer
      startBlock: 55603693
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - SportMarket
        - SportMarketOddsHistory
        - Position
      abis:
        - name: TheRundownConsumer
          file: ../abis/TheRundownConsumer_UpdatedAt.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: CreateSportsMarket(address,bytes32,(bytes32,uint256,int24,int24,int24,string,string),uint256[],uint256[])
          handler: handleCreateSportsMarketEvent
        - event: GameOddsAdded(bytes32,bytes32,(bytes32,int24,int24,int24),uint256[])
          handler: handleGameOddsAddedEvent
        - event: GameResolved(bytes32,uint256,bytes32,(bytes32,uint8,uint8,uint8,uint40),uint256)
          handler: handleGameResolvedUpdatedAtEvent
  - kind: ethereum/contract
    name: SportsAMM
    network: arbitrum-one
    source:
      address: '0xae56177e405929c95E5d4b04C0C87E428cB6432B'
      abi: SportsAMM
      startBlock: 55386533
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/amm-mapping.ts
      entities:
        - MarketTransaction
        - User
        - PositionBalance
        - Referrer
        - ReferredTraders
        - ReferralTransaction
      abis:
        - name: SportsAMM
          file: ../abis/SportsAMM.json
      eventHandlers:
        - event: BoughtFromAmm(address,address,uint8,uint256,uint256,address,address)
          handler: handleBoughtFromAmmEvent
        - event: SoldToAMM(address,address,uint8,uint256,uint256,address,address)
          handler: handleSoldToAMMEvent
        - event: ReferrerPaid(address,address,uint256,uint256)
          handler: handleReferralTransaction
        - event: ExercisedWithOfframp(address,address,address,bool,uint256,uint256)
          handler: handleExercisedWithOfframp
  - kind: ethereum/contract
    name: GamesOddsObtainer
    network: arbitrum-one
    source:
      address: '0xd7C5dF8F490e0eFe8c043F888a39Ea247D4D3e10'
      abi: GamesOddsObtainer
      startBlock: 55606602
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - SportMarket
      abis:
        - name: GamesOddsObtainer
          file: ../abis/GamesOddsObtainer.json
      eventHandlers:
        - event: CreateChildSpreadSportsMarket(address,address,bytes32,int16,uint256[],uint256)
          handler: handleCreateChildSpreadSportsMarketEvent
        - event: CreateChildTotalSportsMarket(address,address,bytes32,uint24,uint256[],uint256)
          handler: handleCreateChildTotalSportsMarketEvent
        - event: GameOddsAdded(bytes32,bytes32,(bytes32,int24,int24,int24,int16,int24,int16,int24,uint24,int24,uint24,int24),uint256[])
          handler: handleGameOddsAddedObtainerEvent
        - event: GamedOddsAddedChild(bytes32,address,(bytes32,int24,int24,int24,int16,int24,int16,int24,uint24,int24,uint24,int24),uint256[],uint256)
          handler: handleGameOddsAddedChildEvent
        - event: ResolveChildMarket(address,uint256,address,uint24,uint24)
          handler: handleResolveChildMarketEvent
  - kind: ethereum/contract
    name: ParlayMarketsAMM
    network: arbitrum-one
    source:
      address: '0x2Bb7D689780e7a34dD365359bD7333ab24903268'
      abi: ParlayMarketsAMM
      startBlock: 55391964
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/parlay-mapping.ts
      entities:
        - ParlayMarket
        - User
        - Referrer
        - ReferredTraders
        - ReferralTransaction
      abis:
        - name: ParlayMarketsAMM
          file: ../abis/ParlayMarketsAMM.json
      eventHandlers:
        - event: NewParlayMarket(address,address[],uint256[],uint256,uint256)
          handler: handleNewParlayMarket
        - event: ParlayMarketCreated(address,address,uint256,uint256,uint256,uint256,uint256,uint256[])
          handler: handleParlayMarketCreated
        - event: ParlayResolved(address,address,bool)
          handler: handleParlayResolved
        - event: ReferrerPaid(address,address,uint256,uint256)
          handler: handleReferralTransaction
  - kind: ethereum/contract
    name: OvertimeVoucher
    network: arbitrum-one
    source:
      address: '0x9Ee26dcb9A3F1104B37A5dCc8573c8b144c7ce42'
      abi: OvertimeVoucher
      startBlock: 56911601
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/overtime-voucher-mapping.ts
      entities:
        - OvertimeVoucher
        - PositionBalance
      abis:
        - name: OvertimeVoucher
          file: ../abis/OvertimeVoucher.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: BoughtFromAmmWithVoucher(address,address,uint8,uint256,uint256,address,address)
          handler: handleBoughtFromAmmWithVoucherEvent
  - kind: ethereum/contract
    name: LiquidityPool
    network: arbitrum-one
    source:
      address: '0x8e9018b48456202aA9bb3E485192B8475822B874'
      abi: LiquidityPool
      startBlock: 68037614
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/liquidity-pool-mapping.ts
      entities:
        - LiquidityPool
        - LiquidityPoolUserTransaction
        - LiquidityPoolPnl
      abis:
        - name: LiquidityPool
          file: ../abis/LiquidityPool.json
      eventHandlers:
        - event: PoolStarted()
          handler: handlePoolStarted
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
        - event: Deposited(address,uint256,uint256)
          handler: handleDeposited
        - event: WithdrawalRequested(address)
          handler: handleWithdrawalRequested
        - event: Claimed(address,uint256)
          handler: handleClaimed
  - kind: ethereum/contract
    name: ParlayAMMLiquidityPool
    network: arbitrum-one
    source:
      address: '0x6848f7C1B5aa2da86F6529bed9d641A67663f0bE'
      abi: ParlayAMMLiquidityPool
      startBlock: 102737834
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/liquidity-pool-parlay-mapping.ts
      entities:
        - LiquidityPool
        - LiquidityPoolUserTransaction
        - LiquidityPoolPnl
      abis:
        - name: ParlayAMMLiquidityPool
          file: ../abis/ParlayAMMLiquidityPool.json
      eventHandlers:
        - event: PoolStarted()
          handler: handlePoolStarted
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
        - event: Deposited(address,uint256,uint256)
          handler: handleDeposited
        - event: WithdrawalRequested(address)
          handler: handleWithdrawalRequested
        - event: Claimed(address,uint256)
          handler: handleClaimed
  - kind: ethereum/contract
    name: DiscountVault
    network: arbitrum-one
    source:
      address: '0xfF7AEA98740fA1e2a9eB81680583e62aaFf1e3Ad'
      abi: SportVault
      startBlock: 72080228
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/sport-vault-mapping.ts
      entities:
        - Vault
        - VaultTransaction
        - VaultPnl
      abis:
        - name: SportVault
          file: ../abis/SportVault.json
      eventHandlers:
        - event: TradeExecuted(address,uint8,uint256,uint256)
          handler: handleVaultTrade
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
        - event: VaultStarted()
          handler: handleVaultStarted
        - event: Deposited(address,uint256)
          handler: handleDeposited
        - event: WithdrawalRequested(address)
          handler: handleWithdrawalRequested
        - event: Claimed(address,uint256)
          handler: handleClaimed
  - kind: ethereum/contract
    name: DegenDiscountVault
    network: arbitrum-one
    source:
      address: '0xA852a651377fbE23f3d3acF5919c3D092aD4b77d'
      abi: SportVault
      startBlock: 72081006
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/sport-vault-mapping.ts
      entities:
        - Vault
        - VaultTransaction
        - VaultPnl
      abis:
        - name: SportVault
          file: ../abis/SportVault.json
      eventHandlers:
        - event: TradeExecuted(address,uint8,uint256,uint256)
          handler: handleVaultTrade
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
        - event: VaultStarted()
          handler: handleVaultStarted
        - event: Deposited(address,uint256)
          handler: handleDeposited
        - event: WithdrawalRequested(address)
          handler: handleWithdrawalRequested
        - event: Claimed(address,uint256)
          handler: handleClaimed
  - kind: ethereum/contract
    name: SafuDiscountVault
    network: arbitrum-one
    source:
      address: '0xE26374c7aFe71a2a6AB4A61080772547C43B87E6'
      abi: SportVault
      startBlock: 69742831
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/sport-vault-mapping.ts
      entities:
        - Vault
        - VaultTransaction
        - VaultPnl
      abis:
        - name: SportVault
          file: ../abis/SportVault.json
      eventHandlers:
        - event: TradeExecuted(address,uint8,uint256,uint256)
          handler: handleVaultTrade
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
        - event: VaultStarted()
          handler: handleVaultStarted
        - event: Deposited(address,uint256)
          handler: handleDeposited
        - event: WithdrawalRequested(address)
          handler: handleWithdrawalRequested
        - event: Claimed(address,uint256)
          handler: handleClaimed
  - kind: ethereum/contract
    name: SportVaultUpsettoor
    network: arbitrum-one
    source:
      address: '0x31c2947c86412A5e33794105aA034DD9312eb711'
      abi: SportVault
      startBlock: 80021455
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/sport-vault-mapping.ts
      entities:
        - Vault
        - VaultTransaction
        - VaultPnl
      abis:
        - name: SportVault
          file: ../abis/SportVault.json
      eventHandlers:
        - event: TradeExecuted(address,uint8,uint256,uint256)
          handler: handleVaultTrade
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
        - event: VaultStarted()
          handler: handleVaultStarted
        - event: Deposited(address,uint256)
          handler: handleDeposited
        - event: WithdrawalRequested(address)
          handler: handleWithdrawalRequested
        - event: Claimed(address,uint256)
          handler: handleClaimed
  - kind: ethereum/contract
    name: ParlayDiscountVault
    network: arbitrum-one
    source:
      address: '0xAb9E5fc491c743AE0b45f7100fAf611Deb8FeC4A'
      abi: ParlayVault
      startBlock: 69754513
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/parlay-vault-mapping.ts
      entities:
        - Vault
        - VaultPnl
        - ParlayVaultTransaction
      abis:
        - name: ParlayVault
          file: ../abis/ParlayVault.json
      eventHandlers:
        - event: TradeExecuted(address,uint256)
          handler: handleVaultTrade
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
        - event: VaultStarted()
          handler: handleVaultStarted
        - event: Deposited(address,uint256)
          handler: handleDeposited
        - event: WithdrawalRequested(address)
          handler: handleWithdrawalRequested
        - event: Claimed(address,uint256)
          handler: handleClaimed
  - kind: ethereum/contract
    name: GamesPlayerProps
    network: arbitrum-one
    source:
      address: '0xda835388e4f17701e352390778f9b4e2f96ad049'
      abi: GamesPlayerProps
      startBlock: 128063226
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - SportMarket
      abis:
        - name: GamesPlayerProps
          file: ../abis/GamesPlayerProps.json
      eventHandlers:
        - event: CreatePlayerPropsMarket(address,address,bytes32,bytes32,string,uint16,uint8,uint256[],uint256)
          handler: handleCreatePlayerPropsMarketEvent
        - event: ResolveChildMarket(address,uint256,address,uint16)
          handler: handleResolvePlayerPropsChildMarketEvent
templates:
  - name: SportMarket
    kind: ethereum/contract
    network: arbitrum-one
    source:
      abi: SportMarket
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - ClaimTx
        - User
      abis:
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: OptionsExercised(indexed address,uint256)
          handler: handleOptionsExercised
        - event: MarketResolved(uint8,uint256,uint256,uint256)
          handler: handleMarketResolved
        - event: PauseUpdated(bool)
          handler: handleMarketPauseUpdated
        - event: PositionsInitialized(address,address,address,address)
          handler: handlePositionsInitialized
