enum TokenTransactionType {
  claimRetroAirdrop
  claimRetroUnlocked
  claimStakingRewards
  stake
  startUnstake
  cancelUnstake
  unstake
  addToEscrow
  vest
  claimMigratedRewards
  lpStake
  lpUnstake
  lpClaimStakingRewards
  lpClaimStakingRewardsSecond
  claimMigratedRetroRewards
  mergeAccount
  delegateVolume
  removeDelegation
}

type TokenTransaction @entity {
  # tx hash - log index
  id: ID!
  transactionHash: Bytes!
  timestamp: BigInt!
  account: Bytes!
  destAccount: Bytes
  amount: BigInt
  protocolRewards: BigInt
  feeRewards: BigInt
  type: TokenTransactionType!
  blockNumber: BigInt!
}

type Staker @entity {
  id: ID!
  account: Bytes!
  timestamp: BigInt!
  stakedAmount: BigInt!
  escrowedAmount: BigInt!
  totalStakedAmount: BigInt!
  unstakingAmount: BigInt!
}

type CanClaimOnBehalfItem @entity {
  id: ID!
  transactionHash: Bytes!
  timestamp: BigInt!
  sender: Bytes!
  account: Bytes!
  canClaimOnBehalf: Boolean!
}

type LPReward @entity {
  id: ID!
  transactionHash: Bytes!
  timestamp: BigInt!
  reward: BigInt!
  secondReward: BigInt!
}

type LPRewardsDuration @entity {
  id: ID!
  transactionHash: Bytes!
  timestamp: BigInt!
  newDuration: BigInt!
}
